{
    "openapi": "3.0.0",
    "info": {
        "title": "Foxchat API",
        "version": "0.5.2",
        "description": "Dies ist die API Dokumentation zum Projektseminars digitaler Tresor."
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Everything about Login"
        },
        {
            "name": "UserChat",
            "description": "Everything about the UserChat - Please make sure to be calling this as a Foxdox User"
        },
        {
            "name": "ProviderChat",
            "description": "Everything about the ProviderChat - Please make sure to be calling this as a Foxdox Provider"
        }
    ],
    "paths": {
        "/api/auth/user/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logs a Foxdox User in.",
                "operationId": "loginFoxdoxUser",
                "requestBody": {
                    "description": "Takes username and password for verification against Foxdox Server.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/userLoginForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sucessfully logged in.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/loginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email or Password is missing."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/user/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logs a Foxdox User out.",
                "operationId": "logutFoxdoxUser",
                "responses": {
                    "200": {
                        "description": "Sucessfully logged out.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/auth/user/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Gives the corresponding user based on the Token back.",
                "operationId": "meFoxdoxUser",
                "responses": {
                    "200": {
                        "description": "User information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/meResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/auth/provider/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logs a Foxdox Provider in.",
                "operationId": "loginFoxdoxProvider",
                "requestBody": {
                    "description": "Takes username, password and X-PROVIDER Header for verification against Foxdox Server.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/providerLoginForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sucessfully logged in.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/loginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email or Password is missing."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/provider/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logs a Foxdox Provider out.",
                "operationId": "logutFoxdoxProvider",
                "responses": {
                    "200": {
                        "description": "Sucessfully logged out.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/auth/provider/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Gives the corresponding provider based on the Token back.",
                "operationId": "meFoxdoxProvider",
                "responses": {
                    "200": {
                        "description": "Provider information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/meResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/user/getinbox": {
            "get": {
                "tags": [
                    "UserChat"
                ],
                "summary": "Get the current Inbox of the User.",
                "description": "Get the current Conversations with each last message & chat partner of the given User.",
                "operationId": "getInboxFoxdoxUser",
                "responses": {
                    "200": {
                        "description": "The inbox information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inboxResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Receiver not valid."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/user/getinboxall": {
            "get": {
                "tags": [
                    "UserChat"
                ],
                "summary": "Get the current Inbox of the User. Including the soft deleted messages.",
                "description": "Get the current Conversations with each last message & chat partner of the given User.",
                "operationId": "getInboxFoxdoxUser",
                "responses": {
                    "200": {
                        "description": "The inbox information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inboxResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Receiver not valid."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/user/sendmessage": {
            "post": {
                "tags": [
                    "UserChat"
                ],
                "summary": "Send a message to a FoxdoxProvider",
                "description": "This request allows a Foxdox User to send a message to a valid Foxdox Provider. It also takes a conversationtag which will be allgemeiner chat or the foxdox document id if the chat is document related.",
                "operationId": "sendMessageFoxdoxUser",
                "requestBody": {
                    "description": "Takes receivingprovider, message and conversationtag.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sendMessageForm"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sendMessageResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/user/getconversationbyname": {
            "post": {
                "tags": [
                    "UserChat"
                ],
                "summary": "Get back the conversation with a Foxdox Provider back. ",
                "description": "This request allows a Foxdox User to send a message to a valid Foxdox Provider. It also takes a conversationtag which will be allgemeiner chat or the foxdox document id if the chat is document related.",
                "operationId": "getConversationByNameFoxdoxUser",
                "requestBody": {
                    "description": "Takes username, conversationtag, the offset (for paging) and take(number (must be divisible by 10) of messages).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getConversationByNameForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Provided Tag, Name or the combination of both not valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationByNameError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/user/getconversationbynameall": {
            "post": {
                "tags": [
                    "UserChat"
                ],
                "summary": "Get back the conversation with a Foxdox Provider back. Including the soft deleted messages.",
                "description": "Get the messages of conversation with a given Foxdox Provider-name. This request includes also the soft deleted ones.",
                "operationId": "getConversationByNameAllFoxdoxUser",
                "requestBody": {
                    "description": "Takes username, conversationtag, the offset (for paging) and take(number (must be divisible by 10) of messages).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getConversationByNameForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Provided Tag, Name or the combination of both not valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationByNameError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/user/getconversationbyid": {
            "post": {
                "tags": [
                    "UserChat"
                ],
                "summary": "Get back the conversation with a Foxdox Provider back. ",
                "description": "This request allows a Foxdox User to send a message to a valid Foxdox Provider. It also takes a conversationtag which will be allgemeiner chat or the foxdox document id if the chat is document related.",
                "operationId": "getConversationByIdFoxdoxUser",
                "requestBody": {
                    "description": "Takes userid, conversationtag, the offset (for paging) and take(number (must be divisible by 10) of messages).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getConversationByIdForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Provided Tag, Name or the combination of both not valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationByIdError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/user/getconversationbyidall": {
            "post": {
                "tags": [
                    "UserChat"
                ],
                "summary": "Get back the conversation with a Foxdox Provider back. Including the soft deleted messages.",
                "description": "Get the messages of conversation with a given Foxdox Provider-name. This request includes also the soft deleted ones.",
                "operationId": "getConversationByIdAllFoxdoxUser",
                "requestBody": {
                    "description": "Takes userid, conversationtag, the offset (for paging) and take(number (must be divisible by 10) of messages).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getConversationByIdForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Provided Tag, Name or the combination of both not valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationByIdError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/user/makeseen": {
            "patch": {
                "tags": [
                    "UserChat"
                ],
                "summary": "Marks a Message sent from a FoxdoxProvider as seen.",
                "description": "",
                "operationId": "makeseenFoxdoxUser",
                "requestBody": {
                    "description": "Takes a messageid.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "messageid": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The inbox information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        },
                                        "text": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Messageid not valid."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/user/deletemessage": {
            "patch": {
                "tags": [
                    "UserChat"
                ],
                "summary": "This request soft deletes the message which means it is not accessible without the All methods anymore. This is done individually so the chat partner still have access.",
                "description": "",
                "operationId": "deleteMessageFoxdoxUser",
                "requestBody": {
                    "description": "Takes a messageid.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "messageid": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The inbox information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        },
                                        "text": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "text": "Has been soft deleted."
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Messageid not valid."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/provider/getinbox": {
            "get": {
                "tags": [
                    "ProviderChat"
                ],
                "summary": "Get the current Inbox of the User.",
                "description": "Get the current Conversations with each last message & chat partner of the given User.",
                "operationId": "getInboxFoxdoxProvider",
                "responses": {
                    "200": {
                        "description": "The inbox information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inboxResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Receiver not valid."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/provider/getinboxall": {
            "get": {
                "tags": [
                    "ProviderChat"
                ],
                "summary": "Get the current Inbox of the User. Including the soft deleted messages.",
                "description": "Get the current Conversations with each last message & chat partner of the given User.",
                "operationId": "getInboxFoxdoxProvider",
                "responses": {
                    "200": {
                        "description": "The inbox information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/inboxResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Receiver not valid."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/provider/sendmessage": {
            "post": {
                "tags": [
                    "ProviderChat"
                ],
                "summary": "Send a message to a FoxdoxProvider",
                "description": "This request allows a Foxdox User to send a message to a valid Foxdox Provider. It also takes a conversationtag which will be allgemeiner chat or the foxdox document id if the chat is document related.",
                "operationId": "sendMessageFoxdoxProvider",
                "requestBody": {
                    "description": "Takes receivingprovider, message and conversationtag.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sendMessageForm"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sendMessageResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/provider/getconversationbyname": {
            "post": {
                "tags": [
                    "ProviderChat"
                ],
                "summary": "Get back the conversation with a Foxdox Provider back. ",
                "description": "This request allows a Foxdox Provider to send a message to a valid Foxdox Provider. It also takes a conversationtag which will be allgemeiner chat or the foxdox document id if the chat is document related.",
                "operationId": "getConversationByNameFoxdoxProvider",
                "requestBody": {
                    "description": "Takes username, conversationtag, the offset (for paging) and take(number (must be divisible by 10) of messages).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getConversationByNameForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Provided Tag, Name or the combination of both not valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationByNameError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/provider/getconversationbynameall": {
            "post": {
                "tags": [
                    "ProviderChat"
                ],
                "summary": "Get back the conversation with a Foxdox User back. Including the soft deleted messages.",
                "description": "Get the messages of conversation with a given Foxdox User-name. This request includes also the soft deleted ones.",
                "operationId": "getConversationByNameAllFoxdoxProvider",
                "requestBody": {
                    "description": "Takes username, conversationtag, the offset (for paging) and take(number (must be divisible by 10) of messages).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getConversationByNameForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Provided Tag, Name or the combination of both not valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationByNameError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/provider/getconversationbyid": {
            "post": {
                "tags": [
                    "ProviderChat"
                ],
                "summary": "Get back the conversation with a Foxdox User back. ",
                "description": "This request allows a Foxdox Provider to send a message to a valid Foxdox User. It also takes a conversationtag which will be allgemeiner chat or the foxdox document id if the chat is document related.",
                "operationId": "getConversationByIdFoxdoxProvider",
                "requestBody": {
                    "description": "Takes userid, conversationtag, the offset (for paging) and take(number (must be divisible by 10) of messages).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getConversationByIdForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Provided Tag, Name or the combination of both not valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationByIdError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/provider/getconversationbyidall": {
            "post": {
                "tags": [
                    "ProviderChat"
                ],
                "summary": "Get back the conversation with a Foxdox User back. Including the soft deleted messages.",
                "description": "Get the messages of conversation with a given Foxdox User-name. This request includes also the soft deleted ones.",
                "operationId": "getConversationByIdAllFoxdoxProvider",
                "requestBody": {
                    "description": "Takes userid, conversationtag, the offset (for paging) and take(number (must be divisible by 10) of messages).",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getConversationByIdForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The message information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Provided Tag, Name or the combination of both not valid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getConversationByIdError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/provider/makeseen": {
            "patch": {
                "tags": [
                    "ProviderChat"
                ],
                "summary": "Marks a Message sent from a FoxdoxUser as seen.",
                "description": "",
                "operationId": "makeseenFoxdoxProvider",
                "requestBody": {
                    "description": "Takes a messageid.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "messageid": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The inbox information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        },
                                        "text": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Messageid not valid."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/api/chat/provider/deletemessage": {
            "patch": {
                "tags": [
                    "ProviderChat"
                ],
                "summary": "This request soft deletes the message which means it is not accessible without the All methods anymore. This is done individually so the chat partner still have access.",
                "description": "",
                "operationId": "deleteMessageFoxdoxProvider",
                "requestBody": {
                    "description": "Takes a messageid.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "messageid": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The inbox information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "integer"
                                        },
                                        "text": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "text": "Has been soft deleted."
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Messageid not valid."
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "unauthorizedError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    }
                },
                "example": {
                    "error": "Unauthorized."
                }
            },
            "getConversationByNameError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "error": {
                        "status": "400",
                        "message": "Provided Tag, Name or the combination of both not valid."
                    }
                }
            },
            "getConversationByIdError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "error": {
                        "status": "400",
                        "message": "Provided Tag, Id or the combination of both not valid."
                    }
                }
            },
            "userLoginForm": {
                "type": "object",
                "required": [
                    "name",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "providerLoginForm": {
                "type": "object",
                "required": [
                    "name",
                    "password",
                    "x-provider"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "x-provider": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "meine.versicherung",
                    "password": "meine.versicherung",
                    "x-provider": "HwCuYqDaadmXGMObfLYP"
                }
            },
            "loginResponse": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "isProvider": {
                        "type": "boolean"
                    },
                    "token_type": {
                        "type": "string"
                    },
                    "expires in": {
                        "type": "integer"
                    }
                }
            },
            "meResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "isProvider": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "foxdox-token": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_id": {
                        "type": "string"
                    }
                }
            },
            "inboxResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "title": "eachConversation",
                    "properties": {
                        "thread": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "is_seen": {
                                    "type": "integer"
                                },
                                "deleted_from_sender": {
                                    "type": "integer"
                                },
                                "deleted_from_receiver": {
                                    "type": "integer"
                                },
                                "user_id": {
                                    "type": "integer"
                                },
                                "conversation_id": {
                                    "type": "integer"
                                },
                                "conversation_tag": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "updated_at": {
                                    "type": "string"
                                },
                                "sender": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "isProvider": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "foxdox-token": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "withUser": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "isProvider": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "foxdox-token": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "updated_at": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "sendMessageForm": {
                "type": "object",
                "required": [
                    "receivingprovider",
                    "message",
                    "conversationtag"
                ],
                "properties": {
                    "receivingprovider": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "conversationtag": {
                        "type": "string"
                    }
                }
            },
            "getConversationByNameForm": {
                "type": "object",
                "required": [
                    "username",
                    "conversationtag"
                ],
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "conversationtag": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "string"
                    },
                    "take": {
                        "type": "string"
                    }
                }
            },
            "getConversationByIdForm": {
                "type": "object",
                "required": [
                    "userid",
                    "conversationtag"
                ],
                "properties": {
                    "userid": {
                        "type": "string"
                    },
                    "conversationtag": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "string"
                    },
                    "take": {
                        "type": "string"
                    }
                }
            },
            "sendMessageResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "conversation_id": {
                        "type": "integer"
                    },
                    "conversation_tag": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "is_seen": {
                        "type": "integer"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "conversation": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "user_one": {
                                "type": "integer"
                            },
                            "user_two": {
                                "type": "integer"
                            },
                            "tag": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string"
                            },
                            "updated_at": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "getConversationResponse": {
                "type": "object",
                "properties": {
                    "withUser": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "isProvider": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "foxdox-token": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string"
                            },
                            "updated_at": {
                                "type": "string"
                            }
                        }
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "is_seen": {
                                    "type": "integer"
                                },
                                "deleted_from_sender": {
                                    "type": "integer"
                                },
                                "deleted_from_receiver": {
                                    "type": "integer"
                                },
                                "user_id": {
                                    "type": "integer"
                                },
                                "conversation_id": {
                                    "type": "integer"
                                },
                                "conversation_tag": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string"
                                },
                                "updated_at": {
                                    "type": "string"
                                },
                                "sender": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "isProvider": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "foxdox-token": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "name": "API-Key",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}